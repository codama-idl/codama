'''
    This code was AUTOGENERATED using the codama library.
    Please DO NOT EDIT THIS FILE, instead use visitors
    to add features, then rerun codama to update it.
    @see https://github.com/codama-idl/codama
'''

import borsh_construct as borsh
import typing
from solders.instruction import AccountMeta, Instruction
from solders.pubkey import Pubkey as SolPubkey
from ..program_id import MEMO_PROGRAM_ADDRESS
class AddMemoArgs(typing.TypedDict):
    memo:str


layout = borsh.CStruct(
    "memo" /borsh.String,
    )


class AddMemoAccounts(typing.TypedDict):
    pass

def AddMemo(
    args: AddMemoArgs,
    accounts: AddMemoAccounts,
    program_id: SolPubkey =  MEMO_PROGRAM_ADDRESS,
    remaining_accounts: typing.Optional[typing.List[AccountMeta]] = None,
) ->Instruction:
    keys: list[AccountMeta] = [
    ]
    if remaining_accounts is not None:
        keys += remaining_accounts
    encoded_args = layout.build({
        "memo":args["memo"],
       })
    return Instruction(program_id,encoded_args,keys)



