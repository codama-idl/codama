//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum QuarryMintWrapperError {
    /// 6000 - You are not authorized to perform this action.
    #[error("You are not authorized to perform this action.")]
    Unauthorized = 0x1770,
    /// 6001 - Cannot mint over hard cap.
    #[error("Cannot mint over hard cap.")]
    HardcapExceeded = 0x1771,
    /// 6002 - Minter allowance exceeded.
    #[error("Minter allowance exceeded.")]
    MinterAllowanceExceeded = 0x1772,
}

impl From<QuarryMintWrapperError> for solana_program_error::ProgramError {
    fn from(e: QuarryMintWrapperError) -> Self {
        solana_program_error::ProgramError::Custom(e as u32)
    }
}
