//! This code was AUTOGENERATED using the Codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun Codama to update it.
//!
//! <https://github.com/codama-idl/codama>

use core::mem::MaybeUninit;

pub mod r#instruction1;
pub mod r#instruction2;
pub mod r#instruction3;
pub mod r#instruction4;
pub mod r#instruction5;
pub mod r#instruction6;
pub mod r#instruction7;

pub use self::r#instruction1::*;
pub use self::r#instruction2::*;
pub use self::r#instruction3::*;
pub use self::r#instruction4::*;
pub use self::r#instruction5::*;
pub use self::r#instruction6::*;
pub use self::r#instruction7::*;

const UNINIT_BYTE: MaybeUninit<u8> = MaybeUninit::<u8>::uninit();

/// Write bytes from a source slice to a destination slice of `MaybeUninit<u8>`.
#[inline(always)]
fn write_bytes(destination: &mut [MaybeUninit<u8>], source: &[u8]) {
    for (d, s) in destination.iter_mut().zip(source.iter()) {
        d.write(*s);
    }
}
