//! This code was AUTOGENERATED using the Codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun Codama to update it.
//!
//! <https://github.com/codama-idl/codama>

use core::mem::MaybeUninit;

pub mod r#advance_nonce_account;
pub mod r#allocate;
pub mod r#allocate_with_seed;
pub mod r#assign;
pub mod r#assign_with_seed;
pub mod r#authorize_nonce_account;
pub mod r#create_account;
pub mod r#create_account_with_seed;
pub mod r#initialize_nonce_account;
pub mod r#transfer_sol;
pub mod r#transfer_sol_with_seed;
pub mod r#upgrade_nonce_account;
pub mod r#withdraw_nonce_account;

pub use self::r#advance_nonce_account::*;
pub use self::r#allocate::*;
pub use self::r#allocate_with_seed::*;
pub use self::r#assign::*;
pub use self::r#assign_with_seed::*;
pub use self::r#authorize_nonce_account::*;
pub use self::r#create_account::*;
pub use self::r#create_account_with_seed::*;
pub use self::r#initialize_nonce_account::*;
pub use self::r#transfer_sol::*;
pub use self::r#transfer_sol_with_seed::*;
pub use self::r#upgrade_nonce_account::*;
pub use self::r#withdraw_nonce_account::*;

const UNINIT_BYTE: MaybeUninit<u8> = MaybeUninit::<u8>::uninit();

/// Write bytes from a source slice to a destination slice of `MaybeUninit<u8>`.
#[inline(always)]
fn write_bytes(destination: &mut [MaybeUninit<u8>], source: &[u8]) {
    for (d, s) in destination.iter_mut().zip(source.iter()) {
        d.write(*s);
    }
}
